#pragma once

#ifndef LOGICBOARD_H
#define LOGICBOARD_H

#include "graphicboard.h"
#include <iostream>

class LogicBoard
{
public:
    LogicBoard();

    void incrementTurn();
    bool millFormed(int turn, int pos);
    bool checkPosition(int pos);
    bool checkPositionToRemove(int pos);
    void addPiece(int pos);
    bool removePiece(int pos);
    bool millIsBroken();
    

    //getters, setters
    int getPlayerTurn();
    int getOpponentTurn();
    int getPiecesLeft(int turn);
    int getGamePhase();
    void setGamePhase(int game_phase);
    int getTurnCounter();
    void setMillJustFormed(bool formed);
    bool getMillJustFormed();
    
    

    

private:
    int turn;
    int game_phase;
    int turn_counter;
    int *board;
    int first_player_pieces;
    int second_player_pieces;
    bool new_mill;
    bool mill_just_formed;
    
    //Board contains information about pawns on the board.
    // 0 - field is empty
    // 1 - player1 occcupies the field
    // 2 - player2 occupies the field
    //Field are flatten into 1d array

    void updateTurnLabel(int turn);
    void inicializeBoard();
    
    std::array<std::array<int, 3>, 16> possibleMillPositions = {{
          {{0,1,2}},
          {{0,9,21}},
          {{1,4,7}},
          {{2,14,23}},
          {{3,4,5}},
          {{3,10,18}},
          {{5,13,20}},
          {{6,7,8}},
          {{6,11,15}},
          {{8,12,17}},
          {{9,10,11}},
          {{12,13,14}},
          {{15,16,17}},
          {{16,19,22}},
          {{18,19,20}},
          {{21,22,23}}
        }};


};

#endif // LOGICBOARD_H
